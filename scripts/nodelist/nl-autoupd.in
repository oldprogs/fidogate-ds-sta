#!<PERL5>
#
# Automatically search and apply FIDO nodediffs to nodelist
#
# Requires
#     sumcrc
#     nl-diff
#

$opt_v = 1;

<INCLUDE config.pl>

# read config
my $CONFIG = "<CONFIG_MAIN>";
CONFIG_read($CONFIG);


# Location nl-diff and sumcrc programs
$BINDIR=CONFIG_get("BINDIR");

##FIXME: retrieve from fareas.bbs##
# Diff's location
$DIFFDIR = "/home/ftp/fecho/nodediff";
# Nodelist name
$NAME    = "nodelist";
# Current nodelist location
$NLDIR   = "/var/spool/bt/ndl";
# Directory for put archiving nodelist
$NLFDIR  = "/home/ftp/fecho/nodelist";

$NLDIFF  = "$BINDIR/nl-diff";

@ARCX    = ("<ARC_ARC>",   "xo");
@LHAX    = ("<ARC_LHA>",   "xf");
@ZIPX    = ("<ARC_ZIP>",   "-9");
@UNZIPX  = ("<ARC_UNZIP>", "-joL");
@CPNL    = ("cp");

require "getopts.pl";
&Getopts('v');

$dir  = $DIFFDIR;
$name = $NAME;
chdir $NLDIR;

##### Find latest nodediff ###################################################
sub latest {
    local($lc,$uc) = @_;
    local($f,$nodelist,$t,$x,$mtime);

    $t        = -1;
    $nodelist = "";

    for $f (<$lc.??? $uc.???>) {
	if(-f $f) {
	    ($x,$x,$x,$x,$x,$x,$x,$x,$x, $mtime, $x,$x,$x) = stat($f);
	    if($mtime > $t) {
		$t        = $mtime;
		$nodelist = $f;
	    }
	}
    }

    return $nodelist;
}

##### Run program, exit if it fails #####
sub run {
    print "Running @_\n" if($opt_v);
    $st = (system @_) >> 8;
    if($st) {
	print STDERR "nl-autoupd: running @_ failed (exit code=$st)\n";
	exit $st;
    }
}

##### Index and save new nodelist #####
sub after {
    print "Archiving new nodelist\n" if($opt_v);
    push @ZIPX, $name;
    if($cddd < 10)
	{$cddd = "00$cddd"}
    if($cddd < 100)
	{$cddd = "0$cddd"}
    push @ZIPX, "$name.$cddd";
    &run(@ZIPX);
    print "Copying new nodelist to public area\n" if($opt_v);
    push @CPNL, "$name.zip";
    push @CPNL, $NLFDIR;
    &run(@CPNL);
    unlink "$name.zip";
}

# Search for current nodelist
$uc = $name;
$uc =~ tr/a-z/A-Z/;
$nodelist = &latest($name,$uc);
die "nl-autoupd: can't find current nodelist\n" if(!$nodelist);

print "Current nodelist: $nodelist\n" if($opt_v);


# Parse filename
if($nodelist =~ /^(.+)\.(\d\d\d)/ ) {
    $basename=$1;
    $day=$dayc=$2;
    print "Current nodelist: basename=$basename day=$day\n" if($opt_v);
}
else {
    die "nl-autoupd: strange nodelist filename $nodelist\n";
}

# Search for nodediffs
$diff = $basename;
$diff =~ tr/A-Z/a-z/;
$diff =~ s/list/diff/;
$uc   = $diff;
$uc   =~ tr/a-z/A-Z/;

while(1) {
    $found = 0;

    $day += 7;
    ##FIXME: wrap-around for next year, take into account leap years##
    $dd  = sprintf "%02d", $day % 100;
    $ddd = sprintf "%03d", $day;

    # ARC
    if(!$found) {
	$file = "$dir/$diff.a$dd";
	if(-f $file) {
	    $found = 1;
	    @extract = @ARCX;
	}
    }
    if(!$found) {
	$file = "$dir/$uc.A$dd";
	if(-f $file) {
	    $found = 1;
	    @extract = @ARCX;
	}
    }
    # LHA
    if(!$found) {
	$file = "$dir/$diff.l$dd";
	if(-f $file) {
	    $found = 1;
	    @extract = @LHAX;
	}
    }
    if(!$found) {
	$file = "$dir/$uc.L$dd";
	if(-f $file) {
	    $found = 1;
	    @extract = @LHAX;
	}
    }
    # ZIP
    if(!$found) {
	$file = "$dir/$diff.z$dd";
	if(-f $file) {
	    $found = 1;
	    @extract = @UNZIPX;
	}
    }
    if(!$found) {
	$file = "$dir/$uc.Z$dd";
	if(-f $file) {
	    $found = 1;
	    @extract = @UNZIPX;
	}
    }

    # Nothing found
    if(!$found) {
	print "No more nodediff files found, exiting\n" if($opt_v);
	$cddd = $ddd - 7;
	&after if($dayc lt $cddd);
	exit 0;
    }
    print "Nodediff: $file, extract=@extract\n" if($opt_v);
	
    # Extract
    push @extract, $file;
    &run(@extract);

    # Find extracted file
    $found = 0;
    if(!$found) {
	$found = -f ($file = "$diff.$ddd");
    }
    if(!$found) {
	$found = -f ($file = "$uc.$ddd");
    }
    die "nl-autoupd: strange, can't find extracted file\n" if(!$found);
    print "Nodediff: $file\n" if($opt_v);

    # Run nl-diff
    @nldiff = ($NLDIFF, "-r", "-b$basename");
    push @nldiff, "-v" if($opt_v);
    push @nldiff, $file;
    &run(@nldiff);
    unlink $file;

    open(F,"$name.$ddd") || die "nl-check: can't open $name.$ddd\n";
    $_ = <F>;

    # CRC check
    if( /Day number \d+ : (\d+)/ ) {
	$old = $_;
	print "CRC from 1st line of $name.$ddd: $old\n" if($opt_v);
	print "CRC check for $name.$ddd ... " if($opt_v);
	$new = `$BINDIR/sumcrc -1z $name.$ddd`;
	chop $new;
	if( $old == $new ) {
	    print "OK\n" if($opt_v);
	    print "CRC computed for $f: $new\n" if($opt_v);
	}
	else {
	    print "ERROR\n\texpected: $old\n\tcomputed: $new\n";
	}
    }
    else {
	print "nl-check:$f: strange error - no CRC found in 1st line\n";
    }

    close(F);

}
    
